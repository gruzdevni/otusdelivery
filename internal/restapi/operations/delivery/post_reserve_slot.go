// Code generated by go-swagger; DO NOT EDIT.

package delivery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostReserveSlotHandlerFunc turns a function with the right signature into a post reserve slot handler
type PostReserveSlotHandlerFunc func(PostReserveSlotParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostReserveSlotHandlerFunc) Handle(params PostReserveSlotParams) middleware.Responder {
	return fn(params)
}

// PostReserveSlotHandler interface for that can handle valid post reserve slot params
type PostReserveSlotHandler interface {
	Handle(PostReserveSlotParams) middleware.Responder
}

// NewPostReserveSlot creates a new http.Handler for the post reserve slot operation
func NewPostReserveSlot(ctx *middleware.Context, handler PostReserveSlotHandler) *PostReserveSlot {
	return &PostReserveSlot{Context: ctx, Handler: handler}
}

/*
	PostReserveSlot swagger:route POST /reserve-slot Delivery postReserveSlot

Резервирование доставки по заказу
*/
type PostReserveSlot struct {
	Context *middleware.Context
	Handler PostReserveSlotHandler
}

func (o *PostReserveSlot) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostReserveSlotParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
